spring:
  application:
    name: "auth-server"
  sql:
    init:
      mode: always
      platform: postgres

  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/test
    username: aventica
    password: aventica

  # --- Spring Session Configuration ---
  session:
    #store-type: jdbc
    jdbc:
      table-name: SPRING_SESSION # Default table name, ensure it doesn't clash if DB is shared
      # Optional: Customize cleanup cron if needed
      # cleanup-cron: "0 * * * * *"
    timeout: 30m

  jpa:
    hibernate:
      # create-drop for development purposes
      ddl-auto: update
    properties:
      hibernate:
        #dialect: org.hibernate.dialect.PostgreSQLDialect | NO NEED to configure explicitly
        format-sql: true
      show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://auth.cakmak-station.de
      client:
        registration:
          google:
            provider: google
            client-id: ${STATION_GOOGLE_CLIENT_ID}
            client-secret: ${STATION_GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"

station:
  config:
    auth-server: # TODO: use env variables
      password-prefix: "{bcrypt}"
      rsa-public-key: classpath:secret/public.pem
      rsa-private-key: classpath:secret/private.pem

server:
  servlet:
    session:
      cookie:
        same-site: none
        secure: true

logging:
  level:
    org:
      springframework:
        security: TRACE
    dev:
      aventix: TRACE